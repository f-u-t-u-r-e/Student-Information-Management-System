name: build-and-release-gui

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install PySide6 openpyxl pyinstaller pillow

      - name: Prepare icon (optional)
        shell: pwsh
        run: |
          if (Test-Path 'icon.png') {
            $py = @"
from PIL import Image
import sys
src = r"icon.png"
dst = r"app.ico"
try:
    img = Image.open(src).convert('RGBA')
    sizes = [(16,16),(24,24),(32,32),(48,48),(64,64),(128,128),(256,256)]
    imgs = [img.resize(s, Image.LANCZOS) for s in sizes]
    imgs[0].save(dst, format='ICO', sizes=sizes)
except Exception as e:
    sys.stderr.write(str(e))
"@
            Set-Content -Path icon_convert.py -Value $py -Encoding UTF8
            python icon_convert.py
            Remove-Item -ErrorAction SilentlyContinue icon_convert.py
          }

      - name: Build EXE
        id: build
        shell: pwsh
        run: |
          $AppName = "学生信息管理系统GUI"
          $args = @('-m','PyInstaller','--noconfirm','--onefile','--clean')
          if (Test-Path 'app.ico') { $args += @('--icon','app.ico') }
          $args += @('--hidden-import','openpyxl','--name', $AppName, 'desktop_app/gui_main.py')
          python @args
          "artifact=dist/$AppName.exe" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Zip EXE for release
        id: zip
        shell: pwsh
        run: |
          $AppName = "学生信息管理系统GUI"
          $zip = "dist/$AppName-$env:GITHUB_REF_NAME.zip"
          if (Test-Path "dist/$AppName.exe") {
            if (Test-Path $zip) { Remove-Item -Force $zip }
            Compress-Archive -Path "dist/$AppName.exe" -DestinationPath $zip -Force
            "artifact_zip=$zip" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          } else {
            Write-Host "EXE not found, skip zip." -ForegroundColor Yellow
          }

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ steps.build.outputs.artifact }}
            ${{ steps.zip.outputs.artifact_zip }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
